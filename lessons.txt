git config - налаштування
	user.name - им'я користувача
	user.email - пошта користувача
	--global - налаштування глобального рівня
	--list - перегляд налаштувань
	--global core.editor '[way]' - вибір едітора

git init - створення репозиторію (папки .git)
ls - список файлів директорії
git status - статус файлів з погляду гіт

git add [file] - додати в індекс (untracked -> track)
(або видалити, якщо [file] був в індексі і видалений із папки)
	-p - вибрати для кожної відмінності чи проводити зміни
git commit - коміт
	-m '[h]' - записує заголовок не викликаючи редактор
	-a (--all) - записує всі змінені файли (без add), які комітились
	також можна дописати шлях до файлу, якщо треба коміт тільки його
git rm [file] - видалити файл з директорії і гіта
	-r [dir] - видалити папку
	-cached [way] - видалити з гіта і лишити в директорії

chmod +x/-x [file] - зробити [file] виконуваним/невиконуваним


git branch - перегляд поточної гілки
	-v - з інформацією на коміт
	[name] - створення нової гілки [name]
	-d [name] - видалення гілки [name] після об'єднання
	-D [name] - видалення гілки [name]
	
git checkout [name] - змінити HEAD (фокус) на іншу гілку чи коміт
	-b - створення і перехід на гілку
	-B [branch-name] [link] - перемістити гілку [branch-name] в
	позицію коміта [link] вручну
	[link] [way] - витягнути файли [way] за станом коміта [link]
	@{-n} - повернеться на n змін гілок (-1 - на попередню)
	- - повернення на попередню гілку
git stash - архівує незбережені зміни (для переключення гілок)
	pop - повертає зміни

git log (--oneline) - повертає лог комітів (компактний)
git show - перегляд коміта
	[link] - перегляд коміта [link]
	[link]:[way] - перегляд всього файлу на момент коміта
	:/[keyword] - пошук найсвіжішого коміта з [keyword] в описі
git reflog - виведе лог стану HEAD
	[branch] - лог стану [branch]
	--date=iso - додасть інформацію по даті змін

Відносні посилання:
	[name]^ вибере першого предка [name] (^^ - другого)
	HEAD^ перемістить HEAD на рівень раніше
	[name]~[X] перемістить на X рівнів вище [name]
	git branch -f main HEAD~3 перемістить насильно main на HEAD~3

git merge [name] - злити гілку [name] в поточну
	git branch 
	-f [name] ORIG_HEAD - повернення [name] після merge
	-d [name] - видалення гілки [name] після об'єднання


git reser --hard - жорсткий зброс змін в track-файлах
git clean -dxf - видалення untracked-файлів (+папок +в gitignore)


git reset - відміна змін
	HEAD~ - відміна змін поточної гілки (для локальних копій)
	[way] - відміна до стану в [way]
	--hard - повне видалення комітів та відміна незакомічених змін
	--soft - відкат гілки без змін директорії та індексу
git commit --amend - швидка заміна коміта (soft reset + commit)


git revert HEAD - створення коміту зі змінами, протилежними попереднім



git rebase [name] - перемістити коміти в позицію під [name]